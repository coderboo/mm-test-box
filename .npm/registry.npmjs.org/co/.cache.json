{"_id":"co","_rev":"66-59c6813b6b5e17734c1b5101abfa41f7","name":"co","description":"generator async flow control goodness","dist-tags":{"latest":"3.1.0"},"versions":{"1.0.0":{"name":"co","version":"1.0.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0"},"license":"MIT","_id":"co@1.0.0","dist":{"shasum":"e933dc090252deb8e6c20dd93d43d64c303bc700","tarball":"http://registry.npmjs.org/co/-/co-1.0.0.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.0":{"name":"co","version":"1.1.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4"},"license":"MIT","_id":"co@1.1.0","dist":{"shasum":"ea07027c8f5230d400e662251924e52d8a234c6b","tarball":"http://registry.npmjs.org/co/-/co-1.1.0.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.0":{"name":"co","version":"1.2.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4"},"license":"MIT","_id":"co@1.2.0","dist":{"shasum":"9af3eeef7c184eaad2456d2b016c0486270cc802","tarball":"http://registry.npmjs.org/co/-/co-1.2.0.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.1":{"name":"co","version":"1.2.1","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4"},"license":"MIT","_id":"co@1.2.1","dist":{"shasum":"4ba2b738479a1a33087a755bd3499cbf945a9e5e","tarball":"http://registry.npmjs.org/co/-/co-1.2.1.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.3.0":{"name":"co","version":"1.3.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4"},"license":"MIT","_id":"co@1.3.0","dist":{"shasum":"560ba5696f2477b2ce344cb0a3385de4f0a4c4e9","tarball":"http://registry.npmjs.org/co/-/co-1.3.0.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.4.0":{"name":"co","version":"1.4.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4"},"license":"MIT","_id":"co@1.4.0","dist":{"shasum":"3961dd2bae1f4666b60472b2f6712a37bc39482f","tarball":"http://registry.npmjs.org/co/-/co-1.4.0.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.4.1":{"name":"co","version":"1.4.1","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4"},"license":"MIT","_id":"co@1.4.1","dist":{"shasum":"ad24a5c0fb4f832f05b1d24438b812ef7a2600b2","tarball":"http://registry.npmjs.org/co/-/co-1.4.1.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.5.0":{"name":"co","version":"1.5.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4","bench":"~0.3.5"},"license":"MIT","_id":"co@1.5.0","dist":{"shasum":"18447ddd69697266d2bd6d56fb7cf59581fc6d96","tarball":"http://registry.npmjs.org/co/-/co-1.5.0.tgz"},"_from":".","_npmVersion":"1.3.4","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.5.1":{"name":"co","version":"1.5.1","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.10.0","q":"~0.9.4","bench":"~0.3.5"},"license":"MIT","_id":"co@1.5.1","dist":{"shasum":"920ee4a4ae5bacf108be61cbb1a1468089ef640d","tarball":"http://registry.npmjs.org/co/-/co-1.5.1.tgz"},"_from":".","_npmVersion":"1.3.4","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.5.2":{"name":"co","version":"1.5.2","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","bench":"~0.3.5"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"_id":"co@1.5.2","dist":{"shasum":"58c6d84e664fc82e363d12f36afbf3dc8d0b4879","tarball":"http://registry.npmjs.org/co/-/co-1.5.2.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"2.0.0":{"name":"co","version":"2.0.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"visionmedia/matcha"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"_id":"co@2.0.0","dist":{"shasum":"1761e3a6c650f53c22f9ac7ef6ea3b404789a1b6","tarball":"http://registry.npmjs.org/co/-/co-2.0.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"2.1.0":{"name":"co","version":"2.1.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"_id":"co@2.1.0","dist":{"shasum":"6c21ed3acc2539f64840f31304bc20d240fb7058","tarball":"http://registry.npmjs.org/co/-/co-2.1.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"2.2.0":{"name":"co","version":"2.2.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@2.2.0","dist":{"shasum":"8e48dd1d23e523426bca4613b37161fd9a230039","tarball":"http://registry.npmjs.org/co/-/co-2.2.0.tgz"},"_from":".","_npmVersion":"1.3.13","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"2.3.0":{"name":"co","version":"2.3.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"scripts":{"test":"make test"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@2.3.0","dist":{"shasum":"4b71a77a11806982593e73f60a51a89da26bdf9a","tarball":"http://registry.npmjs.org/co/-/co-2.3.0.tgz"},"_from":".","_npmVersion":"1.3.13","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"3.0.0":{"name":"co","version":"3.0.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"scripts":{"test":"make test"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@3.0.0","dist":{"shasum":"402d52a16ad231c0a15741fabbbde5297b637a8c","tarball":"http://registry.npmjs.org/co/-/co-3.0.0.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"3.0.1":{"name":"co","version":"3.0.1","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"scripts":{"test":"make test"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@3.0.1","dist":{"shasum":"72cd4f7a67fd5adf740f18e8915435eadf9cb81e","tarball":"http://registry.npmjs.org/co/-/co-3.0.1.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"3.0.2":{"name":"co","version":"3.0.2","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"scripts":{"test":"make test"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@3.0.2","dist":{"shasum":"bcc8a0fe3ea37fc69b15805de593d2b0d01732ba","tarball":"http://registry.npmjs.org/co/-/co-3.0.2.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"3.0.4":{"name":"co","version":"3.0.4","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"scripts":{"test":"make test"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@3.0.4","dist":{"shasum":"92678b2aa4e03e389f37a94ab62acbb632e0a213","tarball":"http://registry.npmjs.org/co/-/co-3.0.4.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"3.0.5":{"name":"co","version":"3.0.5","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"0.0.1","request":"~2.27.0","matcha":"~0.4.0"},"scripts":{"test":"make test"},"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@3.0.5","dist":{"shasum":"39e973d3c0f2392410a4c699a0be22f81096ee56","tarball":"http://registry.npmjs.org/co/-/co-3.0.5.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"3.0.6":{"name":"co","version":"3.0.6","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"~1.2.2","mocha":"~1.12.0","q":"~0.9.4","thunkify":"^2.0.0","request":"~2.27.0","matcha":"~0.4.0"},"scripts":{"test":"make test"},"files":["index.js"],"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@3.0.6","dist":{"shasum":"1445f226c5eb956138e68c9ac30167ea7d2e6bda","tarball":"http://registry.npmjs.org/co/-/co-3.0.6.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"3.1.0":{"name":"co","version":"3.1.0","description":"generator async flow control goodness","keywords":["async","flow","generator","coro","coroutine"],"devDependencies":{"should":"^3.0.0","mocha":"^1.12.0","bluebird":"^2.0.0","thunkify":"^2.0.0","request":"^2.36.0","matcha":"~0.5.0"},"scripts":{"test":"make test"},"files":["index.js"],"license":"MIT","repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"bugs":{"url":"https://github.com/visionmedia/co/issues"},"homepage":"https://github.com/visionmedia/co","_id":"co@3.1.0","_shasum":"4ea54ea5a08938153185e15210c68d9092bc1b78","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"dist":{"shasum":"4ea54ea5a08938153185e15210c68d9092bc1b78","tarball":"http://registry.npmjs.org/co/-/co-3.1.0.tgz"},"directories":{}}},"readme":"# Co\n\n  [![Build Status](https://travis-ci.org/visionmedia/co.svg?branch=master)](https://travis-ci.org/visionmedia/co)\n\n  Generator based flow-control goodness for nodejs and the browser, using\n  thunks _or_ promises, letting you write non-blocking code in a nice-ish\n  way.\n\n  Co is careful to relay any errors that occur back to the generator, including those\n  within the thunk, or from the thunk's callback. \"Uncaught\" exceptions in the generator\n  are passed to `co()`'s thunk.\n\n  Make sure to view the [examples](https://github.com/visionmedia/co/tree/master/examples).\n\n## Platform Compatibility\n\n  When using node 0.11.x or greater, you must use the `--harmony-generators`\n  flag or just `--harmony` to get access to generators.\n\n  When using node 0.10.x and lower or browsers without generator support,\n  you must use [gnode](https://github.com/TooTallNate/gnode) and/or [regenerator](http://facebook.github.io/regenerator/).\n\n  When using node 0.8.x and lower or browsers without `setImmediate`,\n  you must include a `setImmediate` polyfill.\n  For a really simple polyfill, you may use [component/setimmediate.js](https://github.com/component/setimmediate.js).\n  For a more robust polyfill, you may use [YuzuJS/setImmediate](https://github.com/YuzuJS/setImmediate).\n\n## Installation\n\n```\n$ npm install co\n```\n\n## Associated libraries\n\n  View the [wiki](https://github.com/visionmedia/co/wiki) for libraries that\n  work well with Co.\n\n## Example\n\n```js\nvar co = require('co');\nvar thunkify = require('thunkify');\nvar request = require('request');\nvar get = thunkify(request.get);\n\nco(function *(){\n  var a = yield get('http://google.com');\n  var b = yield get('http://yahoo.com');\n  var c = yield get('http://cloudup.com');\n  console.log(a[0].statusCode);\n  console.log(b[0].statusCode);\n  console.log(c[0].statusCode);\n})()\n\nco(function *(){\n  var a = get('http://google.com');\n  var b = get('http://yahoo.com');\n  var c = get('http://cloudup.com');\n  var res = yield [a, b, c];\n  console.log(res);\n})()\n\n// Error handling\n\nco(function *(){\n  try {\n    var res = yield get('http://badhost.invalid');\n    console.log(res);\n  } catch(e) {\n    console.log(e.code) // ENOTFOUND\n }\n})()\n```\n\n## Yieldables\n\n  The \"yieldable\" objects currently supported are:\n\n  - promises\n  - thunks (functions)\n  - array (parallel execution)\n  - objects (parallel execution)\n  - generators (delegation)\n  - generator functions (delegation)\n\nTo convert a regular node function that accepts a callback into one which returns a thunk you may want to use [thunkify](https://github.com/visionmedia/node-thunkify) or similar.\n\n## Thunks vs promises\n\n  While co supports promises, you may return \"thunks\" from your functions,\n  which otherwise behaves just like the traditional node-style callback\n  with a signature of: `(err, result)`.\n\n\n  For example take `fs.readFile`, we all know the signature is:\n\n```js\nfs.readFile(path, encoding, function(err, result){\n\n});\n```\n\n  To work with Co we need a function to return another function of\n  the same signature:\n\n```js\nfs.readFile(path, encoding)(function(err, result){\n\n});\n```\n\n  Which basically looks like this:\n\n```js\nfunction read(path, encoding) {\n  return function(cb){\n    fs.readFile(path, encoding, cb);\n  }\n}\n```\n\n  or to execute immediately like this (see [`thunkify`](https://github.com/visionmedia/node-thunkify)):\n\n```js\nfunction read(path, encoding) {\n  // call fs.readFile immediately, store result later\n  return function(cb){\n    // cb(err, result) or when result ready\n  }\n}\n```\n\n## Receiver propagation\n\n  When `co` is invoked with a receiver it will propagate to most yieldables,\n  allowing you to alter `this`.\n\n```js\nvar ctx = {};\n\nfunction foo() {\n  assert(this == ctx);\n}\n\nco(function *(){\n  assert(this == ctx);\n  yield foo;\n}).call(ctx)\n```\n\n  You also pass arguments through the generator:\n\n```js\nco(function *(a){\n  assert(this == ctx);\n  assert('yay' == a);\n  yield foo;\n}).call(ctx, 'yay');\n```\n\n## API\n\n### co(fn)\n\n  Pass a generator `fn` and return a thunk. The thunk's signature is\n  `(err, result)`, where `result` is the value passed to the `return`\n  statement.\n\n```js\nvar co = require('co');\nvar fs = require('fs');\n\nfunction read(file) {\n  return function(fn){\n    fs.readFile(file, 'utf8', fn);\n  }\n}\n\nco(function *(){\n  var a = yield read('.gitignore');\n  var b = yield read('Makefile');\n  var c = yield read('package.json');\n  return [a, b, c];\n})()\n```\n\n  You may also yield `Generator` objects to support nesting:\n\n\n```js\nvar co = require('co');\nvar fs = require('fs');\n\nfunction size(file) {\n  return function(fn){\n    fs.stat(file, function(err, stat){\n      if (err) return fn(err);\n      fn(null, stat.size);\n    });\n  }\n}\n\nfunction *foo(){\n  var a = yield size('.gitignore');\n  var b = yield size('Makefile');\n  var c = yield size('package.json');\n  return [a, b, c];\n}\n\nfunction *bar(){\n  var a = yield size('examples/parallel.js');\n  var b = yield size('examples/nested.js');\n  var c = yield size('examples/simple.js');\n  return [a, b, c];\n}\n\nco(function *(){\n  var results = yield [foo(), bar()];\n  console.log(results);\n})()\n```\n\n  Or if the generator functions do not require arguments, simply `yield` the function:\n\n```js\nvar co = require('co');\nvar thunkify = require('thunkify');\nvar request = require('request');\n\nvar get = thunkify(request.get);\n\nfunction *results() {\n  var a = get('http://google.com')\n  var b = get('http://yahoo.com')\n  var c = get('http://ign.com')\n  return yield [a, b, c]\n}\n\nco(function *(){\n  // 3 concurrent requests at a time\n  var a = yield results;\n  var b = yield results;\n  console.log(a, b);\n\n  // 6 concurrent requests\n  console.log(yield [results, results]);\n})()\n```\n\n  If a thunk is written to execute immediately you may achieve parallelism\n  by simply `yield`-ing _after_ the call. The following are equivalent if\n  each call kicks off execution immediately:\n\n```js\nco(function *(){\n  var a = size('package.json');\n  var b = size('Readme.md');\n  var c = size('Makefile');\n\n  return [yield a, yield b, yield c];\n})()\n```\n\n  Or:\n\n```js\nco(function *(){\n  var a = size('package.json');\n  var b = size('Readme.md');\n  var c = size('Makefile');\n\n  return yield [a, b, c];\n})()\n```\n\n  You can also pass arguments into the generator. The last argument, `done`, is\n  the callback function. Here's an example:\n\n```js\nvar exec = require('co-exec');\nco(function *(cmd) {\n  var res = yield exec(cmd);\n  return res;\n})('pwd', done);\n```\n\n### yield array\n\n  By yielding an array of thunks you may \"join\" them all into a single thunk which executes them all concurrently,\n  instead of in sequence. Note that the resulting array ordering _is_ retained.\n\n```js\n\nvar co = require('co');\nvar fs = require('fs');\n\nfunction size(file) {\n  return function(fn){\n    fs.stat(file, function(err, stat){\n      if (err) return fn(err);\n      fn(null, stat.size);\n    });\n  }\n}\n\nco(function *(){\n  var a = size('.gitignore');\n  var b = size('index.js');\n  var c = size('Makefile');\n  var res = yield [a, b, c];\n  console.log(res);\n  // => [ 13, 1687, 129 ]\n})()\n```\n\nNested arrays may also be expressed as simple nested arrays:\n\n```js\nvar a = [\n  get('http://google.com'),\n  get('http://yahoo.com'),\n  get('http://ign.com')\n];\n\nvar b = [\n  get('http://google.com'),\n  get('http://yahoo.com'),\n  get('http://ign.com')\n];\n\nconsole.log(yield [a, b]);\n```\n\n### yield object\n\n  Yielding an object behaves much like yielding an array, however recursion is supported:\n\n```js\nco(function *(){\n  var user = yield {\n    name: {\n      first: get('name.first'),\n      last: get('name.last')\n    }\n  };\n})()\n```\n\n  Here is the sequential equivalent without yielding an object:\n\n```js\nco(function *(){\n  var user = {\n    name: {\n      first: yield get('name.first'),\n      last: yield get('name.last')\n    }\n  };\n})()\n```\n\n### Performance\n\n  On my machine 30,000 sequential stat()s takes an avg of 570ms,\n  while the same number of sequential stat()s with `co()` takes\n  610ms, aka the overhead introduced by generators is _extremely_ negligible.\n\n## License\n\n  MIT\n","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"time":{"modified":"2014-07-27T19:03:17.172Z","created":"2013-06-06T20:24:53.571Z","1.0.0":"2013-06-06T20:24:55.133Z","1.1.0":"2013-06-06T23:38:03.571Z","1.2.0":"2013-06-08T19:45:46.699Z","1.2.1":"2013-06-09T00:55:34.844Z","1.3.0":"2013-06-10T20:43:35.738Z","1.4.0":"2013-06-22T06:21:46.429Z","1.4.1":"2013-07-01T20:35:38.141Z","1.5.0":"2013-08-10T02:18:06.732Z","1.5.1":"2013-08-11T00:39:21.029Z","1.5.2":"2013-09-02T17:26:47.678Z","2.0.0":"2013-10-14T23:39:36.083Z","2.1.0":"2013-10-21T20:22:10.304Z","2.2.0":"2013-11-06T00:46:00.108Z","2.3.0":"2013-11-12T20:34:24.575Z","3.0.0":"2013-12-20T04:04:19.381Z","3.0.1":"2013-12-20T05:23:05.400Z","3.0.2":"2014-01-02T17:16:33.430Z","3.0.4":"2014-02-18T05:03:07.311Z","3.0.5":"2014-03-17T15:52:56.713Z","3.0.6":"2014-05-03T18:35:22.299Z","3.1.0":"2014-07-27T19:03:17.172Z"},"repository":{"type":"git","url":"https://github.com/visionmedia/co.git"},"users":{"forivall":true,"nickleefly":true,"winsonwq":true,"lightspeedc":true,"mvila":true,"subtlegradient":true,"substack":true,"mbonaci":true,"thotjs":true,"kael":true,"qur2":true,"redbe4rd":true,"hemanth":true,"refack":true,"dexteryy":true,"norfish":true,"walmik":true,"wxnet":true,"pje":true},"readmeFilename":"Readme.md","homepage":"https://github.com/visionmedia/co","keywords":["async","flow","generator","coro","coroutine"],"bugs":{"url":"https://github.com/visionmedia/co/issues"},"license":"MIT","_attachments":{},"_etag":"\"2K95EJKJKRK6ZHA811B9OA5VJ\""}